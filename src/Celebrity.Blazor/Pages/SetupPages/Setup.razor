@page "/setup"
@inject NavigationManager NavigationManager
@inject CategoriesQuery query
@inject GameCreatorService gameCreatorService
@inject UserFinderService userFinderService
@inject Microsoft.Extensions.Localization.IStringLocalizer<Setup> L

<h1 class="display-4 text-center text-secondary mt-5 text-uppercase">@L["SetUpGame"]</h1>
<div class="d-flex justify-content-center mt-4 mb-5">
    <button class="btn btn-lg btn-outline-dark text-xl-center text-uppercase px-5 py-3" @onclick="StartGame">
        <span class="oi oi-play-circle mr-2" title="add new team" aria-hidden="true"></span>
        @L["StartGame"]
    </button>
</div>

<div class="row">
    <div class="col-lg-6">

        <TeamsSelection Teams="teams"></TeamsSelection>

    </div>
    <div class="col-lg-6">

        <OptionsSelection Options="options"></OptionsSelection>

    </div>
</div>

<div class="row">

    <CategoriesSelection Categories="categories"></CategoriesSelection>

</div>


@code {
    private GameOptionsViewModel options;
    private CategoriesViewModel categories;
    private List<Team> teams;

    protected override async Task OnInitializedAsync()
    {
        teams = new List<Team>()
        {
            new Team(Color.Bluemoon),
            new Team(Color.Lemon)
        };

        options = new GameOptionsViewModel();

        var list = await query.Execute();
        categories = new CategoriesViewModel(list);
    }

    private async Task StartGame()
    {
        var currentUser = await userFinderService.GetCurrentUser();

        var criteria = new GameCreationCriteriaBuilder()
            .WithDifficulties(options.DifficultiesList)
            .WithSubcategories(categories.GetSelectedIds.ToArray())
            .WithTeams(teams.ToArray())
            .WithNumberOfConcepts(options.ConceptCount)
            .WithNumberOfRounds(options.RoundCount)
            .Build();

        var gameId = await gameCreatorService.Create(criteria, currentUser);

        NavigationManager.NavigateTo($"play/{gameId.ToString()}");
    }
}
