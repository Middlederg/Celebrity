@inject SubcategoryRepository repository

<select class="form-control" @onchange=CategoryChanged>

    @foreach (CategoryValue category in subcategories.Select(x => x.Category).Distinct())
    {
        <optgroup label="@category.Description()">
            @foreach (Subcategory subcategory in subcategories.Where(x => x.Category == category))
            {
                <option value="@(subcategory.Id.ToString())">@subcategory.ToString()</option>
            }
        </optgroup>
    }
</select>

@code {
    private IEnumerable<Subcategory> subcategories;

    protected override async Task OnInitializedAsync()
    {
        subcategories = await repository.GetAll();
    }

    private async Task CategoryChanged(ChangeEventArgs e)
    {
        var selectedId = (Guid)e.Value;
        var subcategory = subcategories.FirstOrDefault(x => x.Id == selectedId);
        await OnSubcategoryChanged.InvokeAsync(subcategory);
    }

    [Parameter]
    public EventCallback<Subcategory> OnSubcategoryChanged { get; set; }
}
