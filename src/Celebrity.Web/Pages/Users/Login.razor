@layout EmptyLayout

@page "/login"
@page "/login/{returnUrl}"

@inject AuthService AuthService
@inject NavigationManager NavigationManager


    <div class="flex items-center min-h-screen p-4 bg-gray-100 lg:justify-center">
        <div class="flex flex-col overflow-hidden bg-white rounded-md shadow-lg md:flex-row md:flex-1
        lg:max-w-screen-md">
            <div class="p-4 py-6 text-white bg-blue-800 md:w-80 md:flex-shrink-0 md:flex md:flex-col md:items-center md:justify-evenly">
                <div class="my-3 text-4xl font-bold text-center hidden md:block uppercase text-white-800 tracking-widest">
                    Celebrity

                </div>
                <p class="mt-6 font-normal text-center text-blue-100 md:mt-0">
                    Welcome to the celebrities game!
                    You will win if you can describe and guess more celebrities than the other team
                </p>
                <p class="flex flex-col items-center justify-center mt-10 text-center text-white">
                    <span>Don't have an account?</span>
                    <a href="#" class="underline hover:text-blue-200">Get Started!</a>
                </p>
                <p class="mt-6 text-sm text-center text-blue-100">
                    You can also <a href="#" class="underline hover:text-blue-200">play without an acount</a>
                </p>
            </div>
            <div class="p-5 md:flex-1 bg-white py-20">
                <h3 class="my-4 text-2xl font-semibold text-gray-900">Account Login</h3>
                <form action="#" class="flex flex-col space-y-5">
                    <div class="flex flex-col space-y-1">
                        <label for="email" class="text-sm font-semibold text-gray-600">Email address</label>
                        <input type="email"
                               id="email"
                               autofocus
                               class="px-4 py-2 transition duration-300 border border-gray-400 rounded focus:border-transparent focus:outline-none focus:ring-4 focus:ring-blue-200" />
                    </div>
                    <div class="flex flex-col space-y-1">
                        <div class="flex items-center justify-between">
                            <label for="password" class="text-sm font-semibold text-gray-600">Password</label>
                            <a href="#" class="text-sm text-blue-600 hover:underline hover:text-blue-800">Forgot Password?</a>
                        </div>
                        <input type="password"
                               id="password"
                               class="px-4 py-2 transition duration-300 border border-gray-400 rounded focus:border-transparent focus:outline-none focus:ring-4 focus:ring-blue-200" />
                    </div>

                    <div class="pt-8">
                        <button type="submit"
                                class="w-full px-4 py-2 text-lg font-semibold text-white transition-colors duration-300 bg-blue-800 rounded-md shadow hover:bg-blue-900 focus:outline-none focus:ring-blue-300 focus:ring-4">
                            Log in
                        </button>
                    </div>

                </form>
            </div>
        </div>
    </div>

<div class="flex justify-center items-center h-full">
    <div class="border border-blue-200 p-10 bg-gray-100 rounded flex justify-center items-center flex-col shadow-md">
        <img src="img/logos/blue.png" class="w-16 h-16" alt="Logo">
        <h1 class="text-3xl uppercase text-@Constants.Primary font-semibold tracking-wide">Login</h1>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />

            <div class="px-10 flex flex-col mt-6">
                <label for="email" class="text-sm font-semibold ml-1 text-blue-800">Email address</label>
                <InputText Id="email"
                           Class="@Constants.InputStyle"
                           @bind-Value="loginModel.Email" />
                <div class="text-sm text-yellow-500 tracking-wide">
                    <ValidationMessage For="@(() => loginModel.Email)" />
                </div>
            </div>
            <div class="px-10 flex flex-col mt-6">
                <label for="password" class="text-sm font-semibold ml-1 text-blue-800">Password</label>

                <InputText Id="password"
                           type="password"
                           Class="@Constants.InputStyle"
                           @bind-Value="loginModel.Password" />

                <div class="text-sm text-yellow-500 tracking-wide">

                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>
            </div>

            <div class="px-10 mt-6 text-lg">
                <CustomButton Type="ButtonType.Submit"
                              Style="@Constants.Button"
                              AdditionalStyles="w-full">
                    Login
                </CustomButton>
            </div>
            <div class="px-10 mt-6">
                <CustomAlert Response="response" />

            </div>
        </EditForm>
    </div>
</div>

@code {

    private LoginModel loginModel = new LoginModel();
    private bool ShowErrors;
    private Response<LoginResult> response;

    [Parameter]
    public string ReturnUrl { get; set; }

    private async Task HandleLogin()
    {
        ShowErrors = false;

        response = await AuthService.Login(loginModel);

        if (!response.HasError)
        {
            string url = string.IsNullOrWhiteSpace(ReturnUrl) ? "/" : ReturnUrl;
            NavigationManager.NavigateTo(url);
        }
    }

}